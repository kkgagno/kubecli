---
- name: Install OpenSCAP, Run Scan, and Fetch XML
  hosts: "{{ hosts_to_scan | default('all:!nginx:!node1') }}"
  become: yes
  tasks:
    - name: Set OS-specific variables
      set_fact:
        oscap_package_name: "{{ 'openscap-scanner' if ansible_distribution_version == '24.04' else 'libopenscap8' }}"
        scap_zip_url: "{{ 'https://github.com/ComplianceAsCode/content/releases/download/v0.1.77/scap-security-guide-0.1.77.zip' if ansible_distribution_version == '24.04' else 'https://github.com/ComplianceAsCode/content/releases/download/v0.1.72/scap-security-guide-0.1.72.zip' }}"
        scap_unzip_dir: "{{ 'scap-security-guide-0.1.77' if ansible_distribution_version == '24.04' else 'scap-security-guide-0.1.72' }}"
        scap_xccdf_file: "{{ 'ssg-ubuntu2404-ds.xml' if ansible_distribution_version == '24.04' else 'ssg-ubuntu2004-ds.xml' }}"
      when: ansible_distribution_version in ['24.04', '20.04']

    - name: Fail on unsupported OS
      fail:
        msg: "This playbook only supports Ubuntu 24.04 and 20.04."
      when: ansible_distribution_version not in ['24.04', '20.04']

    - name: Install OpenSCAP Scanner and Unzip
      apt:
        name:
          - "{{ oscap_package_name }}"
          - unzip
        state: present
        update_cache: yes

    - name: Download and Unarchive SCAP Security Guide
      unarchive:
        src: "{{ scap_zip_url }}"
        dest: /tmp/
        remote_src: yes
        creates: "/tmp/{{ scap_unzip_dir }}"

    - name: Run OpenSCAP scan to generate XML results
      command:
        cmd: >
          oscap xccdf eval
          --profile cis_level1_server
          --results /tmp/scan-results-{{ inventory_hostname }}.xml
          /tmp/{{ scap_unzip_dir }}/{{ scap_xccdf_file }}
      register: oscap_scan
      failed_when: "oscap_scan.rc not in [0, 2]"

    - name: Fetch the XML report
      fetch:
        src: /tmp/scan-results-{{ inventory_hostname }}.xml
        dest: "{{ playbook_dir }}/../tmp_reports/"
        flat: yes

- name: Generate HTML Reports on Localhost
  hosts: localhost
  connection: local
  vars:
    timestamp: "{{ now(utc=True, fmt='%Y-%m-%dT%H-%M-%S') }}"
  tasks:
    - name: Find all XML reports fetched from hosts
      find:
        paths: "{{ playbook_dir }}/../tmp_reports"
        patterns: "*.xml"
      register: xml_reports

    - name: Generate individual HTML reports from XML
      shell: |
        set -e
        for xml_file in {{ xml_reports.files | map(attribute='path') | join(' ') }}; do
          html_file="{{ playbook_dir }}/../static/oscap_reports/$(basename "$xml_file" .xml)-{{ timestamp }}.html"
          oscap xccdf generate report --output "$html_file" "$xml_file"
        done
      changed_when: false
      args:
        executable: /bin/bash

