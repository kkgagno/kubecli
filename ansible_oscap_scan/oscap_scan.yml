---
- name: Clean old XML reports from local tmp_reports directory
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Ensure tmp_reports directory exists
      file:
        path: "{{ playbook_dir }}/../tmp_reports/"
        state: directory

    - name: Find old XML files
      find:
        paths: "{{ playbook_dir }}/../tmp_reports/"
        patterns: "*.xml"
      register: old_reports

    - name: Delete old XML files
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_reports.files }}"
      when: old_reports.matched > 0

- name: Install OpenSCAP, Run Scan, and Fetch XML
  hosts: "{{ hosts_to_scan | default('all:!nginx') }}"
  become: yes
  tasks:
    - name: Set OS-specific variables
      set_fact:
        oscap_package_name: "{{ 'openscap-scanner' if ansible_distribution_version == '24.04' else 'libopenscap8' }}"
        scap_zip_url: "{{ 'https://github.com/ComplianceAsCode/content/releases/download/v0.1.77/scap-security-guide-0.1.77.zip' if ansible_distribution_version == '24.04' else 'https://github.com/ComplianceAsCode/content/releases/download/v0.1.72/scap-security-guide-0.1.72.zip' }}"
        scap_unzip_dir: "{{ 'scap-security-guide-0.1.77' if ansible_distribution_version == '24.04' else 'scap-security-guide-0.1.72' }}"
        scap_xccdf_file: "{{ 'ssg-ubuntu2404-ds.xml' if ansible_distribution_version == '24.04' else 'ssg-ubuntu2004-ds.xml' }}"
      when: ansible_distribution_version in ['24.04', '20.04']

    - name: Fail on unsupported OS
      fail:
        msg: "This playbook only supports Ubuntu 24.04 and 20.04."
      when: ansible_distribution_version not in ['24.04', '20.04']

    - name: Install OpenSCAP Scanner and Unzip
      apt:
        name:
          - "{{ oscap_package_name }}"
          - unzip
        state: present
        update_cache: yes

    - name: Download and Unarchive SCAP Security Guide
      unarchive:
        src: "{{ scap_zip_url }}"
        dest: /tmp/
        remote_src: yes
        creates: "/tmp/{{ scap_unzip_dir }}"

    - name: Run OpenSCAP scan to generate XML results
      command:
        cmd: >
          oscap xccdf eval
          --profile cis_level1_server
          --results /tmp/scan-results-{{ inventory_hostname }}.xml
          /tmp/{{ scap_unzip_dir }}/{{ scap_xccdf_file }}
      register: oscap_scan
      failed_when: "oscap_scan.rc not in [0, 2]"


    - name: Recreate the tmp_reports directory
      file:
        path: "{{ playbook_dir }}/../tmp_reports/"
        state: directory

    - name: Fetch the XML report
      fetch:
        src: /tmp/scan-results-{{ inventory_hostname }}.xml
        dest: "{{ playbook_dir }}/../tmp_reports/"
        flat: yes



